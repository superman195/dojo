x-logging: &default-logging
  options:
    max-size: "50m"

volumes:
  postgres-validator-volume:
  redis-validator-volume:
  prisma-pip-cache:
  prisma-binary:
  prisma-client:

networks:
  dojo-validator:
    driver: bridge
  subtensor:
    name: subtensor

services:
#  watchtower:
#    extends:
#      file: docker-compose.shared.yaml
#      service: watchtower

  redis:
    extends:
      file: docker-compose.shared.yaml
      service: redis
    volumes:
      - redis-validator-volume:/data
    networks:
      - dojo-validator

  postgres:
    extends:
      file: docker-compose.shared.yaml
      service: postgres
    volumes:
      - postgres-validator-volume:/var/lib/postgresql/data
    networks:
      - dojo-validator

  synthetic-api:
    container_name: synthetic-api
    image: ghcr.io/tensorplex-labs/dojo-synthetic-api:main
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    env_file:
      - .env
    expose:
      - 5003
    networks:
      - dojo-validator
    healthcheck:
      test: ["CMD", "curl", "-f", "http://synthetic-api:5003/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 50s
    depends_on:
      redis:
        condition: service_healthy
    # allow docker commands inside container
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging: *default-logging

  prisma-setup-vali:
    container_name: prisma-setup-vali
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./docker/Dockerfile.validator.prisma
    command: >
      sh -c "prisma migrate deploy && prisma generate"
    env_file:
      - .env
    volumes:
      - prisma-pip-cache:/root/.cache/pip
      - prisma-binary:/root/prisma-python
      - prisma-client:/app/database/prisma
      - ./:/app
    networks:
      - dojo-validator
    depends_on:
      - postgres
    logging: *default-logging

  validator:
    container_name: validator
    image: ghcr.io/tensorplex-labs/dojo:main
    labels:
      com.centurylinklabs.watchtower.enable: "true"
      com.centurylinklabs.watchtower.depends-on: "synthetic-api,postgres"
    env_file:
      - .env
    volumes:
      - ./.env:/app/.env
      - $BITTENSOR_DIR:/root/.bittensor
      - prisma-binary:/root/prisma-python
      - prisma-pip-cache:/root/.cache/pip
      - prisma-client:/app/database/prisma
    command: ["validator"]
    networks:
      - dojo-validator
      - subtensor
    depends_on:
      synthetic-api:
        condition: service_healthy
      postgres:
        condition: service_healthy
      prisma-setup-vali:
        condition: service_completed_successfully
    logging:
      driver: loki
      options:
        mode: non-blocking
        loki-url: "https://${DOJO_LOKI_URL}"
        loki-external-labels: "validator=${VALIDATOR_HOTKEY}"

  validator-api-service:
    container_name: validator-api-service
    image: ghcr.io/tensorplex-labs/dojo:main
    env_file:
      - .env
    ports:
      - "127.0.0.1:9999:9999"
    command: ["validator-api-service"]
    logging: *default-logging

  extract-dataset:
    container_name: extract-dataset
    image: ghcr.io/tensorplex-labs/dojo:main
    env_file:
      - .env
    command: ["extract-dataset"]
    networks:
      - dojo-validator
    volumes:
      - ./.env:/app/.env
      - prisma-client:/app/database/prisma
      - prisma-binary:/root/prisma-python
      - prisma-pip-cache:/root/.cache/pip
      - $BITTENSOR_DIR:/root/.bittensor
    logging: *default-logging

  migration:
    container_name: migration
    image: ghcr.io/tensorplex-labs/dojo:main
    platform: linux/amd64
    env_file:
      - .env
    command: ["migration"]
    networks:
      - dojo-validator
    volumes:
      - ./.env:/app/.env
      - prisma-client:/app/database/prisma
      - prisma-binary:/root/prisma-python
      - prisma-pip-cache:/root/.cache/pip
      - $BITTENSOR_DIR:/root/.bittensor
    logging: *default-logging

  validate-migration:
    container_name: validate-migration
    image: ghcr.io/tensorplex-labs/dojo:main
    platform: linux/amd64
    env_file:
      - .env
    command: ["validate-migration"]
    networks:
      - dojo-validator
    volumes:
      - ./.env:/app/.env
      - prisma-client:/app/database/prisma
      - prisma-binary:/root/prisma-python
      - prisma-pip-cache:/root/.cache/pip
      - $BITTENSOR_DIR:/root/.bittensor
    logging: *default-logging

  fill-score-column:
    container_name: fill-score-column
    image: ghcr.io/tensorplex-labs/dojo:main
    env_file:
      - .env
    command: ["fill-score-column"]
    networks:
      - dojo-validator
    volumes:
      - ./:/app
      - ./.env:/app/.env
      - prisma-binary:/root/prisma-python
      - prisma-client:/app/database/prisma
      - prisma-pip-cache:/root/.cache/pip
      - $HOME/.bittensor:/root/.bittensor
    logging: *default-logging
